<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.google.javascript.jscomp.TypeInferenceTest" time="0.102" tests="144" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.151-b12"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/wju/test-proj/closure-compiler"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/wju/test-proj/closure-compiler"/>
    <property name="java.runtime.version" value="1.8.0_151-8u151-b12-0ubuntu0.16.04.2-b12"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="net.sourceforge.cobertura.datafile" value="/home/wju/test-proj/closure-compiler/target/cobertura/cobertura.ser"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.4.0-109-generic"/>
    <property name="user.home" value="/home/wju"/>
    <property name="user.timezone" value="America/Los_Angeles"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="wju"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.x.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher cobertura:cobertura"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_151"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="project.build.outputDirectory" value="/home/wju/test-proj/closure-compiler/target/generated-classes/cobertura"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="testAssertNumber2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssertNumber3" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testBackwardsInferenceNew" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testTypeTransformationWithNativeTypeExpressionFunctionOptional" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.003"/>
  <testcase name="testTypeTransformationNoneType" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssumption" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testTypeTransformationRecordFromObject" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssertInstanceof3a" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssertElement" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssertObject2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAssertObject3" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssertObject4" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssertObject5" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testComparison" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.002"/>
  <testcase name="testIf1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testIf2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testIf3" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testVar" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testEnumRAI1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testEnumRAI2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testEnumRAI3" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testEnumRAI4" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testIsDefAndNoResolvedType" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testCall1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testCast1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testCast2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testJoin1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testJoin2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testThrow" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testUnary" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAdd1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAdd2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAdd3" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testFor1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testFor2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testFor3" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testFor4" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testFor5" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testFor6" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testHook" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testIf1a" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testNew1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testNew2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testNew3" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testTry1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testTry2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testTry3" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAssert1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssert2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAssert3" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssert4" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAssert5" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssert6" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAssert7" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssert8" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAssert9" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAssertWithIsDefAndNotNull" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testDo" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testObjectLit" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.002"/>
  <testcase name="testTypeTransformationTypeOfVarWithTypedef" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testTypeTransformationWithNativeTypeExpressionFunction" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testFlattening" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.009"/>
  <testcase name="testTypeTransformationWithNativeTypeExpressionFunctionThis" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testArrayLit" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testGetElem" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testGetProp" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testShortCircuitingAnd2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testUnknownType1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testUnknownType2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAssertArray" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssertFunction" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testTypeTransformationUnionType" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testLotsOfBranchesGettingMerged" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.005"/>
  <testcase name="testTypeTransformationIsTemplatizedPartially" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testTypeTransformationWithTypeFromNamespace" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testNotIsArray" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssertWithNotIsNull" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAssertNumber" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssertObject" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testThrownExpression" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testInfiniteLoop1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testInfiniteLoop2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssignment" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testRecordInference" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssert10" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAssert11" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssert1a" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAssertString" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testInnerFunction1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testInnerFunction2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testShortCircuitingOr" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testReturn1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testReturn2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testTemplateForTypeTransformationTests" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testBackwardsInferenceCall" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testPropertyInference1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testPropertyInference2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testPropertyInference3" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testTypeTransformationObjectUseCase" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testTypeTransformationWithNativeTypeExpressionFunctionVarargs" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testShortCircuitingAnd" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testShortCircuitingOr2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testCatch1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testCatch2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testTypeTransformationObjectUseCase2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testTypeTransformationObjectUseCase3" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testTypeTransformationMapunion" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testTypeTransformationTypeOfVarWithConstructor" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testTypeTransformationRecordFromObjectNested" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testGetElemDereference" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testIssue785" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAssignInCondition" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testInstanceOf1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testInstanceOf2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testInstanceOf3" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testInstanceOf4" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testInstanceOf5" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testInstanceOf6" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssertTypeofProp" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testTypeTransformationConditional" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testIsArray" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testNoThisInference" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testTypeTransformationWithNativeTypeExpressionFunctionReturn" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testExprWithinCast" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testTypeTransformationWithTypeFromTypedef" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testWhile1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testWhile2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAssertInstanceof1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAssertInstanceof2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssertInstanceof3" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAssertInstanceof4" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssertInstanceof5" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testAssertInstanceof6" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssertInstanceof7" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testEmptyVar" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testTypeTransformationTypePredicate" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testTypeTransformationWithTypeFromConstructor" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testTypeTransformationRecordFromObjectWithTemplatizedType" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testTypeTransformationTypeOfVarWithInstanceOfConstructor" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testAssignAdd" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testSwitch1" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testSwitch2" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0"/>
  <testcase name="testSwitch3" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
  <testcase name="testSwitch4" classname="com.google.javascript.jscomp.TypeInferenceTest" time="0.001"/>
</testsuite>